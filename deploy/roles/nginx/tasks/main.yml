# Generate nginx config files, rolling back changes if any part of the
# config is invalid.

- name: ensure default nginx server is not present
  file: path={{ nginx_sites_enabled }}/default state=absent

- name: ensure nginx config files exist
  shell: touch {{ nginx_sites_available }}/{{ site.slug }}
  args:
    creates: '{{ nginx_sites_available }}/{{ site.slug }}'

- name: backup existing nginx config files
  shell: cp {{ site.slug }} {{ site.slug }}.backup
  args:
    chdir: '{{ nginx_sites_available }}'

- name: generate nginx config files
  template: src=nginx.conf dest={{ nginx_sites_available }}/{{ site.slug }}.conf
  register: nginx_conf
  notify: restart nginx

- name: ensure nginx config is valid
  shell: nginx -t
  ignore_errors: yes
  register: nginx_test_valid
  changed_when: false
  when: nginx_conf | changed

- name: remove temporary backups if new nginx config files are valid
  file: path={{ nginx_sites_available }}/{{ site.slug }}.backup state=absent
  when: nginx_test_valid | success

- name: restore temporary backups if new nginx config files are invalid
  shell: mv {{ site.slug }}.backup {{ site.slug }}
  args:
    chdir: '{{ nginx_sites_available }}'
  when: nginx_test_valid | failed

- fail: msg='nginx config is invalid'
  when: nginx_test_valid | failed

- name: ensure site vhosts file is symlinked into sites-enabled
  file: src={{ nginx_sites_available }}/{{ site.slug }}.conf dest={{ nginx_sites_enabled }}/{{ site.slug }}.conf state=link
